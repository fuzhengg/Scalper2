






CREATE TABLE algorithm_data.allConsumMember (
    xmember_id bigint
  , ymember_id bigint
)
PARTITIONED BY (year int,month int)
;


CREATE TABLE algorithm_data.hnallorder_circleResult (
   circle_id bigint
  ,circle_size  bigint
  ,circle_memberID bigint
  ,ip	string
  ,device_id	string
  ,recept_address_same	string
  ,recept_address_detail	string
  ,recept_name	string
  ,recept_phone	string
  ,register_phone	string
  ,recept_mobilearea_a	string
  ,register_mobilearea_a	string
  ,register_time	string
  ,online_first_sale_time	string
  ,online_last_sale_time	string
  ,online_first_need_amt	float
  ,online_last_need_amt	float
  ,online_total_need_amt	float
  ,first_acquire_time	string
  ,last_acquire_time	string
  ,getcouponsecdif	float
  ,orderdetailgoodscost	float
  ,avg_detailorder_discount	float
  ,coupon_amount	float
  ,avgcouponuse	float
  ,getcouponnum	float
)
PARTITIONED BY (year int,month int,day int)
;




use algorithm_data;
drop table if exists HnAllOrder_spark_LG;
create table HnAllOrder_spark_LG AS
select distinct
BIGINT(a.member_id) member_id
,BIGINT(a.member_level_id) member_level_id
,BIGINT(a.ECP_ind) ECP_ind
,a.register_time
,unix_timestamp(a.online_last_sale_time) online_last_sale_time
,unix_timestamp(a.online_first_sale_time) online_first_sale_time
,Double(a.online_first_sale_amt) online_first_sale_amt
,Double(a.online_first_discount_amt) online_first_discount_amt
,Double(a.online_last_sale_amt) online_last_sale_amt
,Double(a.online_last_discount_amt) online_last_discount_amt
,Double(a.online_total_sale_amt) online_total_sale_amt
,Double(a.online_total_discount_amt) online_total_discount_amt
,Double(b.getCouponSecDifAvg) getCouponSecDifAvg
,Double(b.getCouponNum) getCouponNum
from algorithm_data.HnAllOrder_ab a
join
(select member_id
,avg(  unix_timestamp(acquire_time)-unix_timestamp(create_time) )as getCouponSecDifAvg
,count(distinct coupon_code) getCouponNum
from sourcedata.s01_camp_user_coupon
GROUP BY member_id) b on a.member_id=b.member_id
;
